# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddBoardInput {
  bgColor: String!
  title: String!
}

input AddCardInput {
  parentId: ObjectId!
  title: String!
}

input AddListInput {
  parentId: ObjectId!
  title: String!
}

type Board {
  _id: ObjectId!
  author: User!
  bgColor: String!
  lists: [List!]!
  title: String!
}

type Card {
  _id: ObjectId!
  list: List!
  title: String!
}

input EditBoardInput {
  id: ObjectId!
  title: String!
}

input EditCardInput {
  id: ObjectId!
  title: String!
}

input EditListIdInput {
  id: ObjectId!
  parentId: ObjectId!
}

input EditListInput {
  id: ObjectId!
  title: String!
}

type List {
  _id: ObjectId!
  board: Board!
  cards: [Card!]!
  title: String!
}

type Mutation {
  addBoard(input: AddBoardInput!): Board!
  addCard(input: AddCardInput!): Card!
  addList(input: AddListInput!): List!
  deleteBoard(boardId: ObjectId!): Boolean!
  deleteCard(cardId: ObjectId!): Boolean!
  deleteList(listId: ObjectId!): Boolean!
  editBoard(input: EditBoardInput!): Board!
  editCard(input: EditCardInput!): Card!
  editList(input: EditListInput!): List!
  editListId(input: EditListIdInput!): Card!
  login(email: String!, password: String!): User
  logout: Boolean!
  register(email: String!, password: String!): User!
}

"""Mongo object id scalar type"""
scalar ObjectId

type Query {
  allBoards: [Board!]!
  allCards(listId: ObjectId!): [Card!]!
  allLists(boardId: ObjectId!): [List!]!
  currentUser: User
  singleBoard(boardId: ObjectId!): Board
}

type User {
  _id: ObjectId!
  email: String!
}
